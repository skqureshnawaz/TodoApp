{"version":3,"sources":["components/Card.js","components/Navbar.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","card","isActive","_useState","useState","_useState2","_slicedToArray","isEditing","setIsEditing","_useState3","_objectSpread","_useState4","editedCard","setEditedCard","cardRef","useRef","cardContentRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","localStorage","setItem","concat","id","JSON","stringify","scrollIntoView","behavior","inline","handleInputChange","_event$target","name","value","prevCard","_defineProperty","React","createElement","className","ref","onClick","type","heading","onChange","subHeading","para","Navbar","onCreateCard","onCopyCard","onDeleteCard","onShowMoreOptions","FiPlus","FiCopy","FiTrash","FiMoreVertical","Pagination","totalCards","activeCard","onPageChange","pages","Math","ceil","Array","from","length","map","_","index","key","App","_React$useState","_React$useState2","cards","setCards","_React$useState3","_React$useState4","setActiveCard","handleCardChange","step","activeCardIndex","findIndex","nextCardIndex","newCard","_toConsumableArray","copiedCard","filteredCards","filter","window","confirm","FiArrowLeft","FiArrowRight","pageNumber","firstCardIndex","cardsPerPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.8f6b5ade.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./css/card.css\"\n\nconst Card = ({ card, isActive }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedCard, setEditedCard] = useState({ ...card });\n  const cardRef = useRef(null);\n\n  const cardContentRef = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (cardContentRef.current && !cardContentRef.current.contains(event.target)) {\n        setIsEditing(false);\n      }\n    };\n\n    if (isEditing) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isEditing]);\n\n  useEffect(() => {\n    if (isEditing && !isActive) {\n      localStorage.setItem(`card_${card.id}`, JSON.stringify(editedCard));\n    }\n  }, [isEditing, isActive, card.id, editedCard]);\n\n  const handleCardClick = () => {\n    setIsEditing(true);\n  };\n\n  useEffect(() => {\n    if (isActive && cardRef.current) {\n      cardRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        inline: \"center\",\n      });\n    }\n  }, [isActive]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setEditedCard((prevCard) => ({ ...prevCard, [name]: value }));\n  };\n\n  return (\n    <div className={`card ${isActive ? \"active\" : \"disabled\"}`} ref={cardRef}>\n      <div\n        className={`card-content ${isEditing ? \"edit-mode\" : \"\"}`}\n        onClick={handleCardClick}\n        ref={cardContentRef}\n      >\n        <div className=\"heading\">{isEditing ? <input type=\"text\" name=\"heading\" className=\"heading\" value={editedCard.heading} onChange={handleInputChange} /> : editedCard.heading}</div>\n        <div className=\"sub-heading\">{isEditing ? <input type=\"text\" name=\"subHeading\" className=\"sub-heading\" value={editedCard.subHeading} onChange={handleInputChange} /> : card.subHeading}</div>\n        <div className=\"para\">{isEditing ? <textarea name=\"para\" value={editedCard.para} className=\"para\" onChange={handleInputChange} /> : card.para}</div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","// Navbar.js\nimport React from \"react\";\nimport { FiPlus, FiCopy, FiTrash, FiMoreVertical } from \"react-icons/fi\";\nimport \"./css/navbar.css\";\n\nconst Navbar = ({ onCreateCard, onCopyCard, onDeleteCard, onShowMoreOptions }) => {\n  return (\n    <div className=\"navbar\">\n      <button className=\"createcard\" id=\"btn\" onClick={onCreateCard}>\n        <FiPlus />\n      </button>\n      <button className=\"copycard\" id=\"btn\" onClick={onCopyCard}>\n        <FiCopy />\n      </button>\n      <button className=\"deletecard\" id=\"btn\" onClick={onDeleteCard}>\n        <FiTrash />\n      </button>\n      <button className=\"moreoptions\" id=\"btn\" onClick={onShowMoreOptions}>\n        <FiMoreVertical />\n      </button>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./css/pagination.css\"\n\nconst Pagination = ({ totalCards, activeCard, onPageChange }) => {\n  const pages = Math.ceil(totalCards / 3);\n\n  const handlePageChange = (pageNumber) => {\n    onPageChange(pageNumber);\n  };\n\n  return (\n    <div className=\"pagination\">\n      {Array.from({ length: pages }).map((_, index) => (\n        <button\n          key={index + 1}\n          className={`page-button ${index + 1 === activeCard ? \"active\" : \"\"}`}\n          onClick={() => handlePageChange(index + 1)}\n        >\n           {index + 1}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from \"react\";\nimport Card from \"./components/Card\";\nimport Navbar from \"./components/Navbar\";\nimport Pagination from \"./components/Pagination\";\nimport \"./App.css\";\nimport { FiArrowLeft, FiArrowRight } from \"react-icons/fi\";\n\nconst App = () => {\n  const [cards, setCards] = React.useState([\n    { id: 1, heading: \"Untitled 1\", subHeading: \"add a sub title here 1\", para: \"this is your body 1\" },\n    { id: 2, heading: \"Untitled 2\", subHeading: \"add a sub title here 2\", para: \"this is your body 2\" },\n    { id: 3, heading: \"Untitled 3\", subHeading: \"add a sub title here 3\", para: \"this is your body 3\" },\n  ]); \n  const [activeCard, setActiveCard] = React.useState(2);\n  const cardsPerPage = 3;\n  const totalPages = Math.ceil(cards.length / cardsPerPage);\n\n  const handleCreateCard = () => {\n    const newCard = {\n      id: cards.length + 1,\n      heading: \"Untitled \" + (cards.length + 1),\n      subHeading: \"add a sub title here\",\n      para: \"this is your body text add some thing here\",\n    };\n    setCards([...cards, newCard]);\n    handleCardChange(1)\n  };\n\n  const handleCopyCard = () => {\n    const activeCardIndex = cards.findIndex((card) => card.id === activeCard);\n    if (activeCardIndex !== -1) {\n      const copiedCard = { ...cards[activeCardIndex], id: cards.length + 1 };\n      setCards([...cards, copiedCard]);\n    }\n    handleCardChange(1)\n  };\n\n  const handleDeleteCard = () => {\n    const filteredCards = cards.filter((card) => card.id !== activeCard);\n    setCards(filteredCards);\n  \n    if (filteredCards.length > 0) {\n      handleCardChange(-1)\n    } else {\n      //setActiveCard(filteredCards[0].id); \n      setActiveCard(null); \n    }\n  };\n\n  const handleShowMoreOptions = () => {\n    window.confirm(\"delete all\")\n  };\n\n  const handleCardChange = (step) => {\n    const activeCardIndex = cards.findIndex((card) => card.id === activeCard);\n    if (activeCardIndex !== -1) {\n      const nextCardIndex = activeCardIndex + step;\n      if (nextCardIndex >= 0 && nextCardIndex < cards.length) {\n        setActiveCard(cards[nextCardIndex].id);\n      }\n    }\n  };\n\n  const handlePageChange = (pageNumber) => {\n    const firstCardIndex = (pageNumber - 1) * cardsPerPage;\n    if (firstCardIndex < cards.length) {\n      setActiveCard(cards[firstCardIndex].id);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Navbar\n        onCreateCard={handleCreateCard}\n        onCopyCard={handleCopyCard}\n        onDeleteCard={handleDeleteCard}\n        onShowMoreOptions={handleShowMoreOptions}\n      />\n      <div className=\"card-container\">\n        <button className=\"arrow-left\" onClick={() => handleCardChange(-1)}>\n          <FiArrowLeft />\n        </button>\n        {cards.map((card) => (\n          <Card\n            key={card.id}\n            card={card}\n            isActive={card.id === activeCard}\n            // ...\n          />\n        ))}\n        <button className=\"arrow-right\" onClick={() => handleCardChange(1)}>\n          <FiArrowRight />\n        </button>\n      </div>\n      <Pagination\n        totalCards={cards.length}\n        activeCard={activeCard}\n        onPageChange={handlePageChange}\n        cardsPerPage={cardsPerPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}